/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/3bf93bb5-a36c-4662-93c5-bbe8b9ca811b 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  bool rw;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"
#include <TinyGPS.h>
#include <SoftwareSerial.h>

TinyGPS gps;
float late, longu;


void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 
  pinMode(0,OUTPUT);

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();
  // Your code here 

  while (Serial.available() > 0) {
    gps.encode(Serial.read());
  }

  gps.f_get_position((float*)&late, (float*)&longu);

  if (late != TinyGPS::GPS_INVALID_F_ANGLE && longu != TinyGPS::GPS_INVALID_F_ANGLE) {
    double Lat = late;
    double Long = longu;

    loc = {Lat, Long}; 
  }

    // Convert strings to doubles
    //double Lat = latitudeStr.toDouble();
    //double Long = longitudeStr.toDouble();

  }
  //loc = {Lat, Long}; 






/*
  Since Rw is READ_WRITE variable, onRwChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onRwChange()  {
  //Serial.print("led: ");
  //Serial.print(rw);
  if(rw){
    digitalWrite(0,HIGH);
  }
  else{
    digitalWrite(0,LOW);
  }
}

/*
String receivedData = ""; // To store incoming data
bool newDataAvailable = false;
//recieving data
loop:
if (Serial.available() > 0) { // Check if data is available
        char incomingChar = Serial.read(); // Read one character
        if (incomingChar != ' ') { // If it's not a space
            receivedData += incomingChar; // Add the character to the string
        } else { // Space indicates the end of a number
            newDataAvailable = true; // Flag to indicate new data received
        }
    }

    if (newDataAvailable) {
        Serial.print("Received Data: ");
        Serial.println(receivedData); // Print the received data as-is
        receivedData = ""; // Clear the string for the next number
        newDataAvailable = false; // Reset the flag
    }

    //gps:
    void onLatitudeChange() {
  lat = Latitude;
  GPS = {lat, lon};
  Locations += "lat: " + String(lat) + "; " + "lon: " + String(lon) + "\n";
  Movements ++;
}
//or
CloudLocation coordinates;

double  Lat;
double  Long;

coordinates = {Lat, Long};
    */
    




/*
  Since Move is READ_WRITE variable, onMoveChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onMoveChange()  {
  // Add your code here to act upon Move change
  Serial.print(move);
  //Serial.println(" ");
}


void onLocChange()  {
  // Add your code here to act upon Loc change

}